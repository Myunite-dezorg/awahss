"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 4.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import logging
import sys
from pathlib import Path
import os
import environ
import django
from datetime import timedelta
from django.utils.encoding import force_str
django.utils.encoding.force_text = force_str
import dotenv
import dj_database_url


from pathlib import Path


# Initialise environment variables
env = environ.Env()
environ.Env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Load env variables from file
dotenv_file = BASE_DIR / ".env"
if os.path.isfile(dotenv_file):
    dotenv.load_dotenv(dotenv_file)

if os.environ.get('DJANGO_DEBUG', default=False) in ['True', 'true', '1', True]:
    DEBUG = True
else:
    DEBUG = False


SECRET_KEY = os.getenv(
    "DJANGO_SECRET_KEY",
    'x%#3&%giwv8f0+%r946en7z&d@9*rc$sl0qoql56xr%bh^w2mj',
)
# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-h@evv*(t$nj+%7olu37)d-ulo_2j==-$iy#&c@ojvi@57&&uw-'



ALLOWED_HOSTS = ['*',]

INTERNAL_IPS = [
    # ...
    '127.0.0.1',
    # ...
]

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True


# Application definition

APPLICATION_APPS = [
    'apps.users',
    'apps.profiles',
    'apps.agents',
    'apps.aircraft',
    "apps.projects",
    "apps.directory",
    "api",
    # "apps.aircraftblog",
    "apps.payload",
    'apps.stuffs',
    "apps.notes",
    # "apps.wrhs",
    # 'apps.wrhs.base_directory',
    # 'apps.publishers.Articles',
    'apps.services',
    'apps.schedules',
    # 'apps.projects',
    'apps.orders',
    'apps.ibase',
]

SYSTEM_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

]

THIRDPARTY_APPS = [
    'djoser',
    'rest_framework',
    'rest_framework_simplejwt',
    'drf_spectacular',
    'drf_spectacular_sidecar',
    'mptt',
    'tinymce',
    'phone_field',
    'import_export',
    "corsheaders",
    "django_tables2",
    "graphene_django",
    'crispy_forms',
    'author',
    'channels',
    'django_bookmark_base',
    "taggit", 
    'dynamic_raw_id',
    'django_select2',
    'wkhtmltopdf',
    'admin_auto_filters',

]


INSTALLED_APPS = SYSTEM_APPS + THIRDPARTY_APPS + APPLICATION_APPS


CRISPY_TEMPLATE_PACK = 'bootstrap4'

CRISPY_CLASS_CONVERTERS = {
    'textinput': "form-control form-control-lg form-control-solid",
    'emailinput': "form-control form-control-lg form-control-solid",
    
}

LOGIN_REDIRECT_URL = '/'


AUTH_USER_MODEL = 'users.User'


MIDDLEWARE = [

    'author.middlewares.AuthorDefaultBackendMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
     "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# AUTHENTICATION_BACKENDS = [
#     'django.contrib.auth.backends.ModelBackend',
#     'apps.users.user_backend.CustomBackend',
# ]

ROOT_URLCONF = 'core.urls'

GRAPHENE = {
  "SCHEMA": "graph.schema.schema",
}



CORS_ORIGIN_WHITELIST = [
    "http://localhost:3000", 
    "http://127.0.0.1:8000",
    "http://andrewkharzin-fluffy-robot-grqq54q5q7fvg6g-8000.preview.app.github.dev",
    "https://andrewkharzin-fluffy-robot-grqq54q5q7fvg6g-8000.preview.app.github.dev/admin/login/?next=/admin/"
    ]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'
ASGI_APPLICATION = "config.asgi.application"

# DATABASE_ROUTERS = ('core.dbrouters.MyDBRouter',)

DATABASES = {
    'default': dj_database_url.config(conn_max_age=600, default="sqlite:///db.sqlite3"),
    'atlas': {
            'ENGINE': 'djongo',
            'NAME': 'airlines',
            'ENFORCE_SCHEMA': False,
            'CLIENT': {
                'host': 'mongodb+srv://<andrewkharzin19831112>:<andrewkharzin19831112>@cluster0.whmdn.mongodb.net/?retryWrites=true&w=majority'
            }  
    }
}



DATE_FORMAT = ( ( 'd-m-Y' ))
DATE_INPUT_FORMATS = ( ('%d-%m-%Y'),)
DATETIME_FORMAT = (( 'd-m-Y H:i' ))
DATETIME_INPUT_FORMATS = (('%d-%m-%Y %H:%i'),)

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = False

USE_TZ = False


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    # 'DATETIME_FORMAT': "%Y-%m-%d %H:%M:%S",
    'DATETIME_FORMAT': "%d-%m-%Y %H:%M:%S",
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'Awahss API',
    'DESCRIPTION': 'API fro handling services application',
    'VERSION': '1.0.1',
    'SERVE_INCLUDE_SCHEMA': False,
    'SWAGGER_UI_DIST': 'SIDECAR',  # shorthand to use the sidecar instead
    'SWAGGER_UI_FAVICON_HREF': 'SIDECAR',
    'REDOC_DIST': 'SIDECAR',
    # OTHER SETTINGS
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=15),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': False,
    'UPDATE_LAST_LOGIN': False,

    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,
    'JWK_URL': None,
    'LEEWAY': 0,

    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
    'TOKEN_USER_CLASS': 'rest_framework_simplejwt.models.TokenUser',

    'JTI_CLAIM': 'jti',

    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}

DJOSER = {
    'ACTIVATION_URL': '#/activate/{uid}/{token}',
    'SEND_ACTIVATION_EMAIL': False,
}
 
SIMPLE_JWT = {
    'AUTH_HEADER_TYPES': ('JWT',)
}

IMPORT_EXPORT_USE_TRANSACTIONS = True


CORS_ALLOWED_ORIGINS = [
    "http://127.0.0.1:8080",
    "http://localhost:8080",
]

CORS_EXPOSE_HEADERS = ['Content-Type', 'X-CSRFToken']

CSRF_TRUSTED_ORIGINS = [
    "http://andrewkharzin-psychic-fortnight-pwrrgjrj64c6pj6-8000.preview.app.github.dev",
    "https://andrewkharzin-psychic-fortnight-pwrrgjrj64c6pj6-8000.preview.app.github.dev",
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# -----> CELERY
REDIS_URL = os.getenv('REDIS_URL', 'redis://redis:6379')
BROKER_URL = REDIS_URL
CELERY_BROKER_URL = REDIS_URL
CELERY_RESULT_BACKEND = REDIS_URL
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = TIME_ZONE
CELERY_TASK_DEFAULT_QUEUE = 'default'


# -----> TELEGRAM
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
if TELEGRAM_TOKEN is None:
    logging.error(
        "Please provide TELEGRAM_TOKEN in .env file.\n"
        "Example of .env file: https://github.com/ohld/django-telegram-bot/blob/main/.env_example"
    )
    sys.exit(1)

TELEGRAM_LOGS_CHAT_ID = os.getenv("TELEGRAM_LOGS_CHAT_ID", default=None)

# CHANNEL_LAYERS = {
#     "default": {
#         "BACKEND": "channels_redis.core.RedisChannelLayer",
#         "CONFIG": {
#             "hosts": [(env("REDIS_HOST"), env.int("REDIS_PORT"))],
#         },
#     },
# }


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))

 
STATICFILES_DIRS = (
 
os.path.join(PROJECT_ROOT, 'assets'),
 
)

STATIC_URL = "static/"

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


# Extra places for collectstatic to find static files.
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

# Define the path to the airlines_logos folder relative to the base directory
# AIRLINES_LOGOS_DIR = os.path.join(BASE_DIR, 'media/airlines/square/')

# Set the MEDIA_ROOT to the path of the airlines_logos folder


MEDIA_ROOT =  os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

 